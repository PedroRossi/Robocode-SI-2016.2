package grupo4;

import grupo4.*;
import robocode.*;
import robocode.ScannedRobotEvent;
import java.utils.*

query "plsqlca"
  accion: Accion()
end

declare Vitima
   nome: String
   x: double
   y: double
   velocidade: double
   heading: double
   tempo: long
   distancia: double
end


rule "Movimento aleatorio"
   when
		not (exists ScannedRobotEvent())   
   then
   		insert(new Accion(Accion.GIRAR_RADAR_DER, 360, 1));
   		double ang= Math.random()*360;
   		if(ang>180){
   			ang-=180;
   			insert(new Accion(Accion.GIRAR_TANQUE_IZQ, ang, 1));
   		}else {
   			insert(new Accion(Accion.GIRAR_TANQUE_DER, ang, 1));
   		}
   		insert(new Accion(Accion.AVANZAR, Math.random()*360, 1));
end

rule "Volte Da Parede"
   when
		exists HitWallEvent()
   then
	   insert(new Accion(Accion.GIRAR_TANQUE_DER, 180, 1));
	   insert(new Accion(Accion.AVANZAR, 30, 1));
end

rule "Vitima detectada"
   when
		$vitimaD: ScannedRobotEvent()
   		not (exists Vitima(nome==$vitimaD.getName()))
		$status: EstadoRobot()
		eval(($status.isNotTeammate($vitimaD.getName())))
   then
   		Vitima vit=new Vitima();
   		double anguloRelativoRadar =  Auxiliar.anguloRelativo($status.getHeading(), $status.getRadarHeading()); 
   	  insert(new Accion(Accion.GIRAR_RADAR_DER, ($vitimaD.getBearing() - anguloRelativoRadar), 2));
   		vit.setX($status.getX()+($vitimaD.getDistance())*Math.sin(2*3.1416*($status.getHeading()+$vitimaD.getBearing())/360.0));
   		vit.setY($status.getY()+($vitimaD.getDistance())*Math.cos(2*3.1416*($status.getHeading()+$vitimaD.getBearing())/360.0));
   		vit.setHeading($vitimaD.getHeading());
   		vit.setNome($vitimaD.getName());
   		vit.setVelocidade($vitimaD.getVelocity());
   		vit.setTempo(System.currentTimeMillis());
   		insert(vit);
	   insert(new Accion(Accion.DISPARAR, 3, 1));
end

rule "vitima duple"
	when
	  $vit: Vitima ($nomeVit: nome)
      $status : EstadoRobot()
      $vitimaD: ScannedRobotEvent(name == $nomeVit)
    then
   		double anguloRelativoRadar =  Auxiliar.anguloRelativo($status.getHeading(), $status.getRadarHeading()); 
   	  	insert(new Accion(Accion.GIRAR_RADAR_DER, ($vitimaD.getBearing() - anguloRelativoRadar), 2));
		$vit.setX($status.getX()+($vitimaD.getDistance())*Math.sin(2*3.1416*($status.getHeading()+$vitimaD.getBearing())/360.0));
   		$vit.setY($status.getY()+($vitimaD.getDistance())*Math.cos(2*3.1416*($status.getHeading()+$vitimaD.getBearing())/360.0));
   		$vit.setHeading($vitimaD.getHeading());
   		$vit.setNome($vitimaD.getName());
   		$vit.setVelocidade($vitimaD.getVelocity());
   		$vit.setTempo(System.currentTimeMillis());
end

rule "Guess Factor"
	when
		$status: EstadoRobot()
		$vit: ScannedRobotEvent()
		eval(($status.isNotTeammate($vit.getName())))
	then
		int direction=1;
		double BearingAbsoluto=$status.getHeadingRadians()+$vit.getBearingRadians();
		double ex=$status.getX()+Math.sin(BearingAbsoluto)*$vit.getDistance();
		double ey=$status.getY()+Math.cos(BearingAbsoluto)*$vit.getDistance();
		for(int i=0;i<Snorlax.Infos.size();i++){
			RobotInfo RI=(RobotInfo)Snorlax.Infos.get(i);
			if(RI.checkHit($status.getX()+($vit.getDistance())*Math.sin($status.getHeadingRadians()+$vit.getBearingRadians()),
			$status.getY()+($vit.getDistance())*Math.cos($status.getHeadingRadians()+$vit.getBearingRadians()),System.currentTimeMillis())){
				Snorlax.Infos.remove(RI);i--;
			}
		}
		double power = Math.min(3, Math.min(350/$vit.getDistance(), 0.1*$status.getEnergy()));
		if ($vit.getVelocity()>0){
			if (Math.sin($vit.getHeadingRadians()-BearingAbsoluto)*$vit.getVelocity()<0)
				direction = -1;
			else
				direction = 1;
		}
		int[] currentStats = Snorlax.stats; 
		RobotInfo newRI = new RobotInfo($status.getX(), $status.getY(), BearingAbsoluto, power,direction, System.currentTimeMillis(), currentStats);
		int bestind=15;
		for(int i=0;i<31;i++){
			if(currentStats[bestind]<currentStats[i])bestind=i;
		}
		double gf=-(double)(bestind-15)/15;
		double angOffset=direction*gf*newRI.maxEscapeAngle();
		double gunAdj=(BearingAbsoluto-3.1416*2*$status.getGunHeading()/360.0+angOffset);
		while(gunAdj>3.1416)gunAdj-=6.2832;
		while(gunAdj<-3.1416)gunAdj+=6.2832;
		if(gunAdj>0)insert(new Accion(Accion.GIRAR_CANON_DER, gunAdj*360.0/2/3.1416, 3));
		else insert(new Accion(Accion.GIRAR_CANON_IZQ, 3.1416+gunAdj*360.0/2/3.1416, 3));
		insert(new Accion(Accion.DISPARAR, power, 3));
		Snorlax.Infos.add(newRI);
		insert(new Accion(Accion.GIRAR_TANQUE_DER, 30, 3));
		insert(new Accion(Accion.AVANZAR, 10, 3));
end
rule "Vitima Salva"
	when
		$vit: Vitima()
	then
		insert(new Accion(Accion.DISPARAR, 1, 3));
end